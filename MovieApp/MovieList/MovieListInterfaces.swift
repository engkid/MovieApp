//
//  MovieListInterfaces.swift
//  MovieApp
//
//  Created by k1d_dev on 11/08/23.
//  Copyright (c) 2023 k1d_dev. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

enum ViewState<T> {
	case loading(T)
	case returnedResponse(ResponseStatus<T>)
}

enum ResponseStatus<T> {
	case success(T)
	case failed(String)
}

protocol MovieListWireframeInterface: WireframeInterface {
    func navigateToMovieDetails(destination: MovieListNavigationOption, _ navigationController: UINavigationController?)
}

protocol MovieListViewInterface: ViewInterface {
	
	associatedtype ItemType
	
	func setState(_ state: ViewState<ItemType>)
}

protocol MovieListPresenterInterface: PresenterInterface {
    var page: Int { get set }
    
    func discoverMovie() async throws
    func navigate(to destination: MovieListNavigationOption, navigationController: UINavigationController?)
}

protocol MovieListInteractorInterface: InteractorInterface {
    var movieId: String { get }
    func discoverMovie(by id: String, page: String) async throws -> TMDBApiResult<Movie>?
}
