//
//  HomePresenter.swift
//  MovieApp
//
//  Created by k1d_dev on 11/08/23.
//  Copyright (c) 2023 k1d_dev. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import Foundation

final class HomePresenter {

    // MARK: - Private properties -

    private weak var view: HomeViewInterface?
    private let interactor: HomeInteractorInterface
    private let wireframe: HomeWireframeInterface

    // MARK: - Lifecycle -

    init(
        view: HomeViewInterface?,
        interactor: HomeInteractorInterface,
        wireframe: HomeWireframeInterface
    ) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension HomePresenter: HomePresenterInterface {
    
    // MARK: - Interactor -
    
    func getGenreList() async throws {
        
        Task {
            let genresModel = try? await interactor.getGenreList()
            
            let homeItem = genresModel?.genres.map { HomeItem(section: .genreList, type: .genreList(.init(movieId: $0.movieId, name: $0.name)))}
            
            view?.applySnapshot(item: homeItem ?? [])
        }
    }
    
    // MARK: - Wireframe -
    
    func navigate(to destination: HomeNavigationOption, navigationController: UINavigationController? = nil) {
        switch destination {
        case .movieList(let movieId):
            wireframe.navigate(to: .movieList(movieId), navigationController: navigationController)
            return
        }
    }
}

enum HomeNavigationOption {
    case movieList(_ movieId: String)
}
